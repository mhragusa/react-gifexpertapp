{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iNAoCeA,EAjCY,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAkBlD,OACE,sBAAMC,SAXa,SAAEC,GACrBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE9BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAnBoB,SAAEP,GAC1BF,EAAeE,EAAEQ,OAAOF,a,+BCRfG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCYLO,EAVK,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE7B,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdAC,qBAAW,WAETxB,EAASC,GACRwB,MAAM,SAAAC,GAELH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKZ,CAAEpB,IAEEqB,EDlB0BK,CAAc1B,GAAlCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAErB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,4BAEb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEdXgB,EAAe,WAAQ,IAAD,EAEGzC,mBAAS,CAAC,cAFb,mBAE1BQ,EAF0B,KAEdT,EAFc,KAIjC,OACE,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEIS,EAAWe,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,YCdpB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fbee6bbc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n  const [inputValue, setInputValue] = useState('');\n  \n  const handleInputChange = ( e ) => {\n    setInputValue( e.target.value );\n  }\n\n  const handleSubmit = ( e ) => {\n    e.preventDefault();\n    \n    if ( inputValue.trim().length > 2 ) {\n\n      setCategories( categories => [ inputValue, ...categories ] );\n      setInputValue('');\n    }\n  }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input \n        type=\"text\"\n        value={ inputValue }\n        onChange={ handleInputChange }\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory","export const getGifs = async ( category ) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=nRDRveeekW634rNEkk4mwRC20UVPrH4F`;\n  const resp = await fetch( url );\n  const { data } = await resp.json();\n\n  const gifs = data.map( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  })\n\n  return gifs;\n\n}\n\n","import React from 'react'\n\nconst GifGridItem = ( { title, url } ) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={ url } alt={ title } />\n      <p> { title } </p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs( category );\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n      { loading && <p className=\"animate__animated animate__flash\">'Cargando ...'</p> }\n\n      <div className=\"card-grid\">\n        {\n          images.map( img => (\n            <GifGridItem \n              key={ img.id }\n              { ...img }\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect( () => {\n\n    getGifs( category )\n    .then( imgs => {\n\n      setState({\n        data: imgs,\n        loading: false\n      });\n\n    });\n\n  }, [ category ] );\n\n  return state; // { data: [], loading: true }\n}\n\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () =>  {\n\n  const [categories, setCategories] = useState(['One Punch']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n\n      <AddCategory setCategories = { setCategories } />\n      <hr />\n\n      <ol>\n        {\n          categories.map( category => (\n            <GifGrid \n              key={ category }\n              category={ category } />\n          ))\n        }\n      </ol>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}